apiVersion: 1

datasources:
  # Prometheus datasource
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    basicAuth: false
    isDefault: true
    version: 1
    editable: true
    jsonData:
      timeInterval: 30s
      queryTimeout: 60s
      httpMethod: POST
      customQueryParameters: ''
    secureJsonData: {}

  # Loki for logs
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    basicAuth: false
    version: 1
    editable: true
    jsonData:
      maxLines: 1000
      timeout: 60s
    secureJsonData: {}

  # Jaeger for tracing
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    basicAuth: false
    version: 1
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: 'loki'
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
    secureJsonData: {}

  # Elasticsearch for enterprise search
  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    database: '[logstash-]YYYY.MM.DD'
    basicAuth: false
    version: 1
    editable: true
    jsonData:
      interval: Daily
      timeField: '@timestamp'
      esVersion: '7.10.0'
      maxConcurrentShardRequests: 5
      logMessageField: 'message'
      logLevelField: 'level'
    secureJsonData: {}

  # PostgreSQL for business metrics
  - name: PostgreSQL
    type: postgres
    access: proxy
    url: postgres:5432
    database: retail_db
    user: postgres
    basicAuth: false
    version: 1
    editable: true
    jsonData:
      sslmode: disable
      postgresVersion: 1300
      timescaledb: false
    secureJsonData:
      password: ${POSTGRES_PASSWORD}

  # Redis for cache metrics
  - name: Redis
    type: redis-datasource
    access: proxy
    url: redis://redis:6379
    basicAuth: false
    version: 1
    editable: true
    jsonData:
      client: standalone
      poolSize: 5
      timeout: 10
      pingInterval: 0
      pipelineWindow: 0
    secureJsonData: {}

  # InfluxDB for time series data
  - name: InfluxDB
    type: influxdb
    access: proxy
    url: http://influxdb:8086
    database: monitoring
    user: admin
    basicAuth: false
    version: 1
    editable: true
    jsonData:
      httpMode: GET
      keepCookies: []
    secureJsonData:
      password: ${INFLUXDB_PASSWORD}