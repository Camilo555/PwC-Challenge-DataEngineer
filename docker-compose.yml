services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      TYPESENSE_HOST: typesense
    volumes:
      - ./:/app
    depends_on:
      - typesense
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 5

  etl-gold:
    build:
      context: .
      dockerfile: docker/Dockerfile.etl
    profiles: ["etl"]
    env_file:
      - .env
    volumes:
      - ./:/app
    command: ["python", "scripts/run_gold.py"]
    depends_on:
      - api
    restart: "no"

  etl-all:
    build:
      context: .
      dockerfile: docker/Dockerfile.etl
    profiles: ["etl"]
    env_file:
      - .env
    volumes:
      - ./:/app
    command: ["python", "scripts/run_etl.py"]
    depends_on:
      - api
    restart: "no"

  indexer:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    env_file:
      - .env
    environment:
      TYPESENSE_HOST: typesense
    volumes:
      - ./:/app
    command: ["python", "scripts/index_typesense.py"]
    depends_on:
      - api
      - typesense
    restart: "no"

  etl-bronze:
    build:
      context: .
      dockerfile: docker/Dockerfile.etl
    profiles: ["etl"]
    env_file:
      - .env
    volumes:
      - ./:/app
    command: ["python", "scripts/run_bronze.py"]
    depends_on:
      - api
    restart: "no"

  etl-silver:
    build:
      context: .
      dockerfile: docker/Dockerfile.etl
    profiles: ["etl"]
    env_file:
      - .env
    volumes:
      - ./:/app
    command: ["python", "scripts/run_silver.py"]
    depends_on:
      - etl-bronze
    restart: "no"

  typesense:
    image: typesense/typesense:0.25.1
    environment:
      TYPESENSE_DATA_DIR: /data
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
    ports:
      - "8108:8108"
    volumes:
      - typesense-data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: pwc-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - cluster.name=pwc-retail-cluster
      - node.name=pwc-retail-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: pwc-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
      - xpack.encryptedSavedObjects.encryptionKey=32characterslongencryptionkeypart1
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  typesense-data: {}
  elasticsearch-data: {}
