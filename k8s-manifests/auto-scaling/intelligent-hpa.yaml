# Intelligent Horizontal Pod Autoscaler for BMAD Platform
# Supports scaling from 3 to 50+ instances with predictive scaling

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bmad-api-intelligent-hpa
  namespace: default
  labels:
    app: pwc-retail-platform-api
    component: autoscaling
    optimization: intelligent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pwc-retail-platform-api
  minReplicas: 3
  maxReplicas: 50
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 10
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
      - type: Pods
        value: 3
        periodSeconds: 120
      selectPolicy: Min
  metrics:
  # CPU-based scaling
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  # Memory-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  # Custom metric: Request rate
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
        selector:
          matchLabels:
            app: pwc-retail-platform-api
      target:
        type: AverageValue
        averageValue: "100"
  # Custom metric: Response time
  - type: Pods
    pods:
      metric:
        name: http_request_duration_p99
        selector:
          matchLabels:
            app: pwc-retail-platform-api
      target:
        type: AverageValue
        averageValue: "500m"
  # Custom metric: Queue depth
  - type: Pods
    pods:
      metric:
        name: task_queue_depth
        selector:
          matchLabels:
            app: pwc-retail-platform-api
      target:
        type: AverageValue
        averageValue: "50"

---
# Vertical Pod Autoscaler for Resource Optimization
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: bmad-api-vpa
  namespace: default
  labels:
    app: pwc-retail-platform-api
    component: autoscaling
    optimization: vertical
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pwc-retail-platform-api
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: api
      mode: Auto
      minAllowed:
        cpu: 100m
        memory: 256Mi
      maxAllowed:
        cpu: 4000m
        memory: 8Gi
      controlledResources:
      - cpu
      - memory
      controlledValues: RequestsAndLimits

---
# HPA for ETL Processing with Burst Scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bmad-etl-burst-hpa
  namespace: default
  labels:
    app: pwc-retail-platform-etl
    component: autoscaling
    optimization: burst
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pwc-retail-platform-etl
  minReplicas: 1
  maxReplicas: 20
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 200
        periodSeconds: 30
      - type: Pods
        value: 5
        periodSeconds: 30
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      selectPolicy: Min
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: etl_job_queue_size
        selector:
          matchLabels:
            app: pwc-retail-platform-etl
      target:
        type: AverageValue
        averageValue: "10"

---
# Custom Resource for Predictive Scaling
apiVersion: scaling.pwc.io/v1alpha1
kind: PredictiveAutoscaler
metadata:
  name: bmad-api-predictive-scaler
  namespace: default
  labels:
    app: pwc-retail-platform-api
    component: autoscaling
    optimization: predictive
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pwc-retail-platform-api
  minReplicas: 3
  maxReplicas: 50
  predictionWindow: 600s  # 10 minutes
  scaleUpThreshold: 0.7   # Scale up when predicted utilization > 70%
  scaleDownThreshold: 0.3 # Scale down when predicted utilization < 30%
  metrics:
  - name: cpu_utilization
    weight: 0.4
    source:
      prometheus:
        query: 'avg(rate(container_cpu_usage_seconds_total{pod=~"pwc-retail-platform-api-.*"}[5m])) * 100'
  - name: memory_utilization
    weight: 0.3
    source:
      prometheus:
        query: 'avg(container_memory_working_set_bytes{pod=~"pwc-retail-platform-api-.*"} / container_spec_memory_limit_bytes{pod=~"pwc-retail-platform-api-.*"}) * 100'
  - name: request_rate
    weight: 0.3
    source:
      prometheus:
        query: 'sum(rate(http_requests_total{service="pwc-retail-platform-api"}[5m]))'
  historicalData:
    retentionDays: 30
    seasonality:
      daily: true
      weekly: true
      monthly: true
  algorithms:
  - name: linear_regression
    weight: 0.4
  - name: arima
    weight: 0.3
  - name: prophet
    weight: 0.3

---
# KEDA ScaledObject for Event-Driven Scaling
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: bmad-etl-kafka-scaler
  namespace: default
  labels:
    app: pwc-retail-platform-etl
    component: autoscaling
    optimization: event-driven
spec:
  scaleTargetRef:
    name: pwc-retail-platform-etl
  minReplicaCount: 1
  maxReplicaCount: 30
  pollingInterval: 15
  cooldownPeriod: 300
  idleReplicaCount: 1
  triggers:
  - type: kafka
    metadata:
      bootstrapServers: kafka-cluster-kafka-bootstrap:9092
      consumerGroup: bmad-etl-processors
      topic: data-processing-queue
      lagThreshold: "50"
      offsetResetPolicy: latest
  - type: rabbitmq
    metadata:
      protocol: auto
      host: amqp://guest:guest@rabbitmq-service:5672/
      mode: QueueLength
      value: "30"
      queueName: etl-tasks
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-server:9090
      metricName: etl_pending_jobs
      threshold: "20"
      query: sum(etl_job_queue_size{service="pwc-retail-platform-etl"})

---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bmad-api-pdb
  namespace: default
  labels:
    app: pwc-retail-platform-api
    component: availability
spec:
  selector:
    matchLabels:
      app: pwc-retail-platform-api
      component: api
  minAvailable: 3
  unhealthyPodEvictionPolicy: AlwaysAllow

---
# PodDisruptionBudget for ETL Processing
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bmad-etl-pdb
  namespace: default
  labels:
    app: pwc-retail-platform-etl
    component: availability
spec:
  selector:
    matchLabels:
      app: pwc-retail-platform-etl
      component: etl
  minAvailable: 1
  unhealthyPodEvictionPolicy: IfHealthyBudget